// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tienda_Virtual.Models;

#nullable disable

namespace Tienda_Virtual.Migrations
{
    [DbContext(typeof(TiendaPedContext))]
    partial class TiendaPedContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Tienda_Virtual.Models.Factura", b =>
                {
                    b.Property<int>("IdFactura")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FechaCompra")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.HasKey("IdFactura")
                        .HasName("PK_IdFactura");

                    b.HasIndex("IdProducto", "NombreProducto");

                    b.ToTable("Factura", (string)null);
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .HasColumnType("int");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("NombreProducto")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("IdProducto")
                        .HasName("PK_IdProducto");

                    b.HasIndex("IdUsuario");

                    b.HasIndex(new[] { "IdProducto", "NombreProducto" }, "UQ_IdProducto_NombreProducto")
                        .IsUnique();

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("CorreoUsuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdUsuario")
                        .HasName("PK_IdUsuario");

                    b.HasIndex(new[] { "CorreoUsuario" }, "UC_CorreoUser")
                        .IsUnique();

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Factura", b =>
                {
                    b.HasOne("Tienda_Virtual.Models.Producto", "Producto")
                        .WithMany("Facturas")
                        .HasForeignKey("IdProducto", "NombreProducto")
                        .HasPrincipalKey("IdProducto", "NombreProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("FK_DatosFactura");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Producto", b =>
                {
                    b.HasOne("Tienda_Virtual.Models.Usuario", "IdUsuarioNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_IdUsuarioProducto");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Producto", b =>
                {
                    b.Navigation("Facturas");
                });

            modelBuilder.Entity("Tienda_Virtual.Models.Usuario", b =>
                {
                    b.Navigation("Productos");
                });
#pragma warning restore 612, 618
        }
    }
}
